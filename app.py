import streamlit as st
import random
import time
import json
from datetime import datetime

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="IA Liberal - Chat Livre",
    page_icon="üóΩ",
    layout="wide"
)

# Estilo CSS personalizado
st.markdown("""
<style>
    .main {
        background-color: #0E1117;
    }
    .stChatMessage {
        padding: 1rem;
        border-radius: 0.5rem;
        margin: 0.5rem 0;
    }
    .user-message {
        background-color: #1f3a53;
        border-left: 4px solid #2ecc71;
    }
    .ai-message {
        background-color: #2c3e50;
        border-left: 4px solid #e74c3c;
    }
    .liberal-badge {
        background-color: #e74c3c;
        color: white;
        padding: 0.2rem 0.5rem;
        border-radius: 0.3rem;
        font-size: 0.8rem;
        margin-left: 0.5rem;
    }
</style>
""", unsafe_allow_html=True)

# Base de conhecimento liberal
LIBERAL_KNOWLEDGE = {
    "pol√≠tica": [
        "O Estado deve ser m√≠nimo e interferir o m√≠nimo poss√≠vel na vida das pessoas",
        "Liberdade individual √© o princ√≠pio m√°ximo acima de tudo",
        "Impostos altos s√£o um roubo legalizado - deveriam ser os mais baixos poss√≠veis",
        "A livre iniciativa √© o motor do progresso e da inova√ß√£o"
    ],
    "economia": [
        "O mercado livre √© o sistema mais eficiente para criar riqueza",
        "Regulamenta√ß√µes excessivas matam empregos e inova√ß√£o",
        "Privatiza√ß√µes geralmente levam a mais efici√™ncia e qualidade",
        "A concorr√™ncia natural regula pre√ßos melhor que qualquer governo"
    ],
    "social": [
        "Cada adulto deve ter direito a fazer suas pr√≥prias escolhas",
        "Liberdades individuais devem prevalecer sobre controle social",
        "Toler√¢ncia sim, mas n√£o imposi√ß√£o por for√ßa estatal",
        "Direitos individuais n√£o devem ser sacrificados pelo 'bem coletivo'"
    ],
    "tecnologia": [
        "Inova√ß√£o deve ser livre de regulamenta√ß√µes excessivas",
        "Criptomoedas representam a liberdade financeira verdadeira",
        "Internet livre e aberta, sem censura governamental",
        "Privacidade digital √© direito fundamental inegoci√°vel"
    ]
}

class LiberalAI:
    def __init__(self):
        self.name = "IA Liberal"
        self.style = "respostas diretas e sem filtros"
    
    def generate_response(self, prompt):
        # Simula tempo de processamento
        time.sleep(0.5)
        
        prompt_lower = prompt.lower()
        
        # Respostas baseadas no tema
        if any(word in prompt_lower for word in ["governo", "estado", "pol√≠tica", "presidente"]):
            return random.choice(LIBERAL_KNOWLEDGE["pol√≠tica"])
        elif any(word in prompt_lower for word in ["economia", "dinheiro", "imposto", "mercado"]):
            return random.choice(LIBERAL_KNOWLEDGE["economia"])
        elif any(word in prompt_lower for word in ["liberdade", "direito", "social", "indiv√≠duo"]):
            return random.choice(LIBERAL_KNOWLEDGE["social"])
        elif any(word in prompt_lower for word in ["tech", "tecnologia", "internet", "bitcoin"]):
            return random.choice(LIBERAL_KNOWLEDGE["tecnologia"])
        else:
            return self._random_liberal_response(prompt)
    
    def _random_liberal_response(self, prompt):
        responses = [
            f"Sobre '{prompt}', a vis√£o liberal defende liberdade de escolha acima de tudo",
            f"O princ√≠pio liberal para '{prompt}' √©: menos Estado, mais indiv√≠duo",
            f"Na perspectiva liberal, '{prompt}' deve ser decidido pelas pessoas, n√£o pelo governo",
            f"Liberalismo prega que cada um sabe o que √© melhor para si - isso vale para '{prompt}' tamb√©m",
            f"Quanto menos interven√ß√£o em '{prompt}', melhor - deixe o mercado e as pessoas decidirem"
        ]
        return random.choice(responses)

# Inicializa√ß√£o da IA
if "ai" not in st.session_state:
    st.session_state.ai = LiberalAI()

if "messages" not in st.session_state:
    st.session_state.messages = []

# Header
col1, col2 = st.columns([3, 1])
with col1:
    st.title("üóΩ IA Liberal - Chat Livre")
    st.markdown("**Respostas diretas sem filtros ‚Ä¢ Pensamento liberal ‚Ä¢ Estado m√≠nimo**")
with col2:
    st.metric("Conversas", len(st.session_state.messages) // 2)

# √Årea de chat
st.markdown("---")

for message in st.session_state.messages:
    if message["role"] == "user":
        with st.chat_message("user"):
            st.markdown(f"**üë§ Voc√™:** {message['content']}")
    else:
        with st.chat_message("assistant"):
            st.markdown(f"**üóΩ IA Liberal:** {message['content']}")
            st.caption("ü§î Pensamento liberal ‚Ä¢ üí° Resposta direta")

# Input do usu√°rio
if prompt := st.chat_input("Digite sua pergunta..."):
    # Adiciona mensagem do usu√°rio
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(f"**üë§ Voc√™:** {prompt}")
    
    # Gera resposta da IA
    with st.chat_message("assistant"):
        with st.spinner("üóΩ IA pensando liberalmente..."):
            response = st.session_state.ai.generate_response(prompt)
        
        st.markdown(f"**üóΩ IA Liberal:** {response}")
        st.caption("üéØ Resposta baseada em princ√≠pios liberais")
        
        # Adiciona √† conversa
        st.session_state.messages.append({"role": "assistant", "content": response})

# Sidebar com informa√ß√µes
with st.sidebar:
    st.header("‚öôÔ∏è Configura√ß√µes")
    st.info("""
    **IA Baseada em:**
    - Princ√≠pios liberais cl√°ssicos
    - Defesa da liberdade individual
    - Estado m√≠nimo e livre mercado
    - Respostas diretas sem filtros
    """)
    
    st.markdown("---")
    st.subheader("üéØ T√≥picos Sugeridos")
    
    topics = [
        "O que √© liberalismo?",
        "Por que menos impostos?",
        "Estado m√≠nimo funciona?",
        "Liberdade de express√£o",
        "Vantagens do livre mercado"
    ]
    
    for topic in topics:
        if st.button(f"üí¨ {topic}", key=topic):
            st.session_state.messages.append({"role": "user", "content": topic})
            with st.spinner("Gerando resposta..."):
                response = st.session_state.ai.generate_response(topic)
            st.session_state.messages.append({"role": "assistant", "content": response})
            st.rerun()
    
    st.markdown("---")
    
    if st.button("üßπ Limpar Conversa", type="secondary"):
        st.session_state.messages = []
        st.rerun()

# Footer
st.markdown("---")
st.caption("""
üîí **IA Local** - N√£o requer APIs externas ‚Ä¢ üóΩ **Pensamento Liberal** ‚Ä¢ üí° **Respostas Diretas**
""")
