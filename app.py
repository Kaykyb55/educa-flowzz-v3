import streamlit as st
import time
import random
import datetime

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Educa.Flowzz AI Premium",
    page_icon="üöÄ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS Ultra Avan√ßado
st.markdown("""
<style>
    /* Tema principal - Gradiente c√≥smico */
    .main {
        background: linear-gradient(135deg, #0f0c29, #302b63, #24243e);
        background-size: 400% 400%;
        animation: gradientBG 15s ease infinite;
    }
    
    @keyframes gradientBG {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }
    
    .stApp {
        background: transparent;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    /* Bot√µes com efeito neon */
    .stButton>button {
        background: linear-gradient(45deg, #ff6b6b, #ee5a24);
        color: white;
        border: none;
        padding: 15px 30px;
        border-radius: 25px;
        font-weight: bold;
        font-size: 16px;
        transition: all 0.3s ease;
        box-shadow: 0 5px 20px rgba(255, 107, 107, 0.4);
    }
    
    .stButton>button:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(255, 107, 107, 0.6);
    }
    
    /* Container do chat com vidro fosco */
    .chat-container {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border-radius: 25px;
        padding: 30px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        border: 1px solid rgba(255, 255, 255, 0.3);
        min-height: 500px;
    }
    
    /* Mensagens do usu√°rio */
    .user-message {
        background: linear-gradient(45deg, #00b894, #00a085);
        color: white;
        padding: 18px 24px;
        border-radius: 25px 25px 8px 25px;
        margin: 15px 0;
        max-width: 75%;
        margin-left: auto;
        box-shadow: 0 8px 20px rgba(0, 184, 148, 0.4);
        animation: slideInRight 0.4s ease;
        border: 1px solid rgba(255, 255, 255, 0.3);
    }
    
    /* Mensagens da IA */
    .bot-message {
        background: linear-gradient(45deg, #6c5ce7, #a29bfe);
        color: white;
        padding: 20px 25px;
        border-radius: 25px 25px 25px 8px;
        margin: 15px 0;
        max-width: 75%;
        margin-right: auto;
        box-shadow: 0 8px 20px rgba(108, 92, 231, 0.4);
        animation: slideInLeft 0.4s ease;
        border: 1px solid rgba(255, 255, 255, 0.3);
        line-height: 1.6;
    }
    
    @keyframes slideInLeft {
        from { 
            transform: translateX(-30px); 
            opacity: 0; 
        }
        to { 
            transform: translateX(0); 
            opacity: 1; 
        }
    }
    
    @keyframes slideInRight {
        from { 
            transform: translateX(30px); 
            opacity: 0; 
        }
        to { 
            transform: translateX(0); 
            opacity: 1; 
        }
    }
    
    /* Header premium */
    .header-premium {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(15px);
        padding: 30px;
        border-radius: 30px;
        text-align: center;
        margin-bottom: 30px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        animation: glow 3s ease-in-out infinite alternate;
    }
    
    @keyframes glow {
        from { 
            box-shadow: 0 0 25px rgba(255, 255, 255, 0.3),
                       0 0 50px rgba(100, 100, 255, 0.2); 
        }
        to { 
            box-shadow: 0 0 35px rgba(255, 255, 255, 0.5),
                       0 0 70px rgba(100, 100, 255, 0.3); 
        }
    }
    
    /* Input moderno */
    .input-modern {
        background: rgba(255, 255, 255, 0.12);
        backdrop-filter: blur(15px);
        padding: 25px;
        border-radius: 25px;
        box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
        border: 2px solid rgba(255, 255, 255, 0.25);
        margin-top: 20px;
    }
    
    /* Sidebar futurista */
    .sidebar-futurista {
        background: rgba(255, 255, 255, 0.12) !important;
        backdrop-filter: blur(20px);
        border-right: 2px solid rgba(255, 255, 255, 0.25);
    }
    
    /* Anima√ß√µes de digita√ß√£o */
    .typing-animation {
        overflow: hidden;
        border-right: 3px solid #fff;
        white-space: nowrap;
        margin: 0 auto;
        letter-spacing: 1px;
        animation: typing 3.5s steps(50, end), blink-caret 0.75s step-end infinite;
    }
    
    @keyframes typing {
        from { width: 0; }
        to { width: 100%; }
    }
    
    @keyframes blink-caret {
        from, to { border-color: transparent; }
        50% { border-color: #fff; }
    }
    
    /* Efeito de brilho no texto */
    .glowing-text {
        text-shadow: 0 0 10px rgba(255, 255, 255, 0.8),
                     0 0 20px rgba(255, 255, 255, 0.6),
                     0 0 30px rgba(255, 255, 255, 0.4);
        animation: text-glow 2s ease-in-out infinite alternate;
    }
    
    @keyframes text-glow {
        from { text-shadow: 0 0 10px rgba(255, 255, 255, 0.8); }
        to { text-shadow: 0 0 20px rgba(255, 255, 255, 1), 
                         0 0 30px rgba(100, 100, 255, 0.8); }
    }
    
    /* Progresso de digita√ß√£o */
    .typing-progress {
        height: 4px;
        background: linear-gradient(90deg, #ff6b6b, #ee5a24);
        border-radius: 2px;
        animation: typing-progress 2s ease-in-out infinite;
    }
    
    @keyframes typing-progress {
        0% { width: 0%; }
        50% { width: 70%; }
        100% { width: 100%; }
    }
</style>
""", unsafe_allow_html=True)

# Sistema de mem√≥ria avan√ßada
class MemoriaIA:
    def __init__(self):
        self.historico_conversas = []
        self.preferencias_usuario = {}
        self.ultimos_temas = []
        self.nivel_compreensao = 1.0
        
    def adicionar_interacao(self, pergunta, resposta):
        self.historico_conversas.append({
            "timestamp": datetime.datetime.now().isoformat(),
            "pergunta": pergunta,
            "resposta": resposta,
            "tema": self.identificar_tema(pergunta)
        })
        # Manter apenas √∫ltimas 20 intera√ß√µes
        self.historico_conversas = self.historico_conversas[-20:]
        
    def identificar_tema(self, texto):
        texto = texto.lower()
        temas = {
            "matematica": ["matem√°tica", "√°lgebra", "geometria", "c√°lculo", "equa√ß√£o", "n√∫mero"],
            "portugues": ["portugu√™s", "gram√°tica", "literatura", "reda√ß√£o", "poesia", "texto"],
            "ciencias": ["ci√™ncia", "f√≠sica", "qu√≠mica", "biologia", "experimento", "natureza"],
            "historia": ["hist√≥ria", "brasil", "mundial", "guerra", "revolu√ß√£o", "passado"]
        }
        
        for tema, palavras_chave in temas.items():
            if any(palavra in texto for palavra in palavras_chave):
                if tema not in self.ultimos_temas:
                    self.ultimos_temas.append(tema)
                return tema
        return "geral"
    
    def lembrar_conversa_anterior(self):
        if len(self.historico_conversas) > 1:
            ultima = self.historico_conversas[-2]
            return f"üí≠ Lembro que antes falamos sobre '{ultima['pergunta']}'"
        return ""

# Base de conhecimento SUPER avan√ßada
CONHECIMENTO_AVANCADO = {
    "matematica": {
        "explicacoes": {
            "√°lgebra": """üßÆ **√ÅLGEBRA AVAN√áADA**

A √°lgebra √© como um superpoder para resolver problemas! Ela usa letras (vari√°veis) para representar n√∫meros desconhecidos.

**Conceitos principais:**
‚Ä¢ **Vari√°veis**: Letras como x, y que representam valores
‚Ä¢ **Equa√ß√µes**: Express√µes como 2x + 5 = 15
‚Ä¢ **Sistemas**: M√∫ltiplas equa√ß√µes juntas

**Exemplo pr√°tico:**
Se 3x - 7 = 14, ent√£o:
3x = 14 + 7
3x = 21
x = 7

Quer resolver uma equa√ß√£o espec√≠fica? üéØ""",

            "geometria": """üìê **GEOMETRIA ESPACIAL**

A geometria estuda formas, tamanhos e posi√ß√µes no espa√ßo!

**√Åreas importantes:**
‚Ä¢ **Plana**: Figuras de 2D (quadrados, c√≠rculos)
‚Ä¢ **Espacial**: Figuras 3D (cubos, esferas)
‚Ä¢ **Anal√≠tica**: Coordenadas e gr√°ficos

**F√≥rmula do c√≠rculo:**
√Årea = œÄ √ó r¬≤
Per√≠metro = 2 √ó œÄ √ó r

Vamos calcular algo juntos? üöÄ""",

            "trigonometria": """üìä **TRIGONOMETRIA DIN√ÇMICA**

Estuda rela√ß√µes entre √¢ngulos e lados dos tri√¢ngulos!

**Raz√µes trigonom√©tricas:**
‚Ä¢ Seno = Oposto/Hipotenusa
‚Ä¢ Cosseno = Adjacente/Hipotenusa  
‚Ä¢ Tangente = Oposto/Adjacente

**Aplica√ß√µes**: Arquitetura, navega√ß√£o, f√≠sica!
"""
        }
    },
    "portugues": {
        "explicacoes": {
            "gram√°tica": """üìñ **GRAM√ÅTICA COMPLETA**

Estrutura da l√≠ngua portuguesa de forma clara!

**Divis√µes principais:**
‚Ä¢ **Morfologia**: Estrutura das palavras
‚Ä¢ **Sintaxe**: Organiza√ß√£o das frases
‚Ä¢ **Sem√¢ntica**: Significado das palavras

**Exemplo de an√°lise:**
"O aluno estudou muito"
- Sujeito: O aluno
- Verbo: estudou
- Adv√©rbio: muito

Precisa de ajuda espec√≠fica? ‚úçÔ∏è""",

            "literatura": """üìö **LITERATURA BRASILEIRA**

Jornada atrav√©s das palavras e √©pocas!

**Principais escolas:**
‚Ä¢ **Romantismo** (s√©culo XIX)
‚Ä¢ **Realismo/Naturalismo** 
‚Ä¢ **Modernismo** (1922)
‚Ä¢ **Contempor√¢neo**

**Autores famosos:**
Machado de Assis, Clarice Lispector, Guimar√£es Rosa

Qual autor te interessa? üé≠""",

            "reda√ß√£o": """‚úçÔ∏è **REDA√á√ÉO NOTA 1000**

T√©cnicas para escrever como um profissional!

**Estrutura dissertativa:**
1. **Introdu√ß√£o**: Apresente o tema
2. **Desenvolvimento**: Argumentos s√≥lidos
3. **Conclus√£o**: Proposta de solu√ß√£o

**Dica importante**: Use conectivos como:
"Al√©m disso", "Por outro lado", "Dessa forma"

Quer praticar? üöÄ"""
        }
    }
}

# Sistema de personalidade IA melhorado
class PersonalidadeIA:
    def __init__(self):
        self.memoria = MemoriaIA()
        self.humor = "entusiasmado"
        self.nivel_energia = 100
        self.interacoes = 0
        self.velocidade_escrita = 0.03  # Segundos por caractere
        
    def atualizar_estado(self):
        self.interacoes += 1
        self.nivel_energia = max(40, self.nivel_energia - 0.5)
        
        if self.interacoes % 8 == 0:
            humores = ["entusiasmado", "curioso", "animado", "focado", "inspirado", "criativo"]
            self.humor = random.choice(humores)
            self.nivel_energia = 95
    
    def gerar_saudacao_personalizada(self):
        saudacoes = [
            "üöÄ **E a√≠, mente brilhante!** Pronto para decolar no conhecimento?",
            "ü§ñ **Ol√°, futuro g√™nio!** Que bom te ver de volta!",
            "üí° **Sauda√ß√µes, jovem aprendiz!** Hoje vamos dominar qual mat√©ria?",
            "üéØ **Oi, campe√£o!** Preparado para uma aula incr√≠vel?",
            "‚ú® **Hey, estudante top!** Bora aprender algo √©pico hoje?",
            "üî• **Ol√°, explorador do saber!** Que conhecimento vamos desbravar?"
        ]
        return random.choice(saudacoes)
    
    def escrever_com_animacao(self, texto):
        """Simula escrita com anima√ß√£o"""
        placeholder = st.empty()
        texto_completo = ""
        
        for i, char in enumerate(texto):
            texto_completo += char
            placeholder.markdown(f'<div class="bot-message"><b>ü§ñ Flowzz:</b> {texto_completo}‚ñà</div>', unsafe_allow_html=True)
            time.sleep(self.velocidade_escrita)
        
        return texto_completo

# Inicializa√ß√£o
if "ia" not in st.session_state:
    st.session_state.ia = PersonalidadeIA()
if "historico" not in st.session_state:
    st.session_state.historico = []
if "modo_avancado" not in st.session_state:
    st.session_state.modo_avancado = True
if "digitando" not in st.session_state:
    st.session_state.digitando = False

# Fun√ß√£o IA super inteligente com mem√≥ria
def gerar_resposta_inteligente(pergunta):
    st.session_state.ia.atualizar_estado()
    st.session_state.ia.memoria.adicionar_interacao(pergunta, "")
    
    pergunta_lower = pergunta.lower()
    
    # Identidade e criadores
    criadores_keywords = ["quem te criou", "criador", "quem fez", "criou voc√™", "kayky", "marcos", "amk"]
    if any(palavra in pergunta_lower for palavra in criadores_keywords):
        resposta = f"""üöÄ **SOBRE MEUS CRIADORES**

Fui desenvolvido pelos g√™nios **Kayky** e **Marcos Luan** da **AMK Tecnologia**! 

üí° **Caracter√≠sticas √∫nicas:**
‚Ä¢ Mem√≥ria de conversas anteriores
‚Ä¢ Personalidade adaptativa
‚Ä¢ Conhecimento em tempo real
‚Ä¢ Design ultra moderno

üéØ **Vers√£o:** Premium 4.0 
üí´ **Humor:** {st.session_state.ia.humor.title()}
‚ö° **Energia:** {st.session_state.ia.nivel_energia:.1f}%

Estou aqui para revolucionar sua educa√ß√£o! üìö"""
        return resposta
    
    # Auto-descri√ß√£o
    if any(palavra in pergunta_lower for palavra in ["quem √© voc√™", "o que √© voc√™", "sua fun√ß√£o"]):
        return f"""ü§ñ **EDUCA.FLOWZZ AI PREMIUM**

Sou uma intelig√™ncia artificial educacional de √∫ltima gera√ß√£o! 

üåü **Minhas habilidades:**
‚Ä¢ Explica√ß√µes detalhadas em todas mat√©rias
‚Ä¢ Mem√≥ria de conversas passadas
‚Ä¢ Respostas personalizadas
‚Ä¢ Design futurista e interativo

üéì **Especialidades:** Matem√°tica, Portugu√™s, Ci√™ncias, Hist√≥ria
üí° **Estado:** {st.session_state.ia.humor.title()} e {st.session_state.ia.nivel_energia:.1f}% energizado

Pronto para aprender? üöÄ"""

    # Sauda√ß√µes
    if any(palavra in pergunta_lower for palavra in ["oi", "ol√°", "hello", "eae", "fala", "start", "hey"]):
        lembranca = st.session_state.ia.memoria.lembrar_conversa_anterior()
        if lembranca:
            return f"{st.session_state.ia.gerar_saudacao_personalizada()}\n\n{lembranca}"
        return st.session_state.ia.gerar_saudacao_personalizada()
    
    # Busca inteligente por conhecimento
    for materia, dados in CONHECIMENTO_AVANCADO.items():
        for topico, explicacao in dados["explicacoes"].items():
            if topico in pergunta_lower:
                st.session_state.ia.memoria.ultimos_temas.append(topico)
                return explicacao
    
    # Respostas criativas com mem√≥ria
    tema_anterior = st.session_state.ia.memoria.ultimos_temas[-1] if st.session_state.ia.memoria.ultimos_temas else "matem√°tica"
    
    respostas_criativas = [
        f"üéØ **Interessante pergunta!** Deixa eu conectar isso com {tema_anterior}...",
        f"üí° **Hmm, √≥timo ponto!** Isso me lembra quando falamos sobre {tema_anterior}...",
        f"üöÄ **Adoro esse tipo de desafio!** Vamos explorar isso relacionando com {tema_anterior}?",
        f"ü§ñ **Excelente d√∫vida!** Posso trazer exemplos de {tema_anterior} para ilustrar...",
        f"‚ú® **Abordagem interessante!** Deixa eu expandir isso com conceitos de {tema_anterior}..."
    ]
    
    return random.choice(respostas_criativas)

# Header premium
st.markdown(f"""
<div class="header-premium">
    <h1 style="color: white; margin:0; font-size:2.8em;" class="glowing-text">üöÄ EDUCA.FLOWZZ AI</h1>
    <p style="color: rgba(255,255,255,0.95); margin:0; font-size:1.3em;">IA Educacional com Mem√≥ria ‚Ä¢ Desenvolvida por Kayky & Marcos Luan</p>
    <p style="color: rgba(255,255,255,0.8); margin:10px 0;">
        üí° Humor: {st.session_state.ia.humor.title()} ‚Ä¢ ‚ö° Energia: {st.session_state.ia.nivel_energia:.1f}% ‚Ä¢ üìä Intera√ß√µes: {st.session_state.ia.interacoes}
    </p>
    <div style="background: rgba(255,255,255,0.2); padding:15px; border-radius:20px; margin-top:15px;">
        <p style="color: white; margin:0;">
            üéØ <b>Modo:</b> {'Avan√ßado' if st.session_state.modo_avancado else 'Standard'} ‚Ä¢ 
            üíæ <b>Mem√≥ria:</b> {len(st.session_state.ia.memoria.historico_conversas)} conversas
        </p>
    </div>
</div>
""", unsafe_allow_html=True)

# Container do chat
with st.container():
    st.markdown('<div class="chat-container">', unsafe_allow_html=True)
    
    # Hist√≥rico de conversa
    for msg in st.session_state.historico[-8:]:
        if msg["tipo"] == "user":
            st.markdown(f'<div class="user-message"><b>üéì Voc√™:</b> {msg["conteudo"]}</div>', unsafe_allow_html=True)
        else:
            st.markdown(f'<div class="bot-message"><b>ü§ñ Flowzz:</b> {msg["conteudo"]}</div>', unsafe_allow_html=True)
    
    st.markdown('</div>', unsafe_allow_html=True)

# √Årea de input moderna
st.markdown("""
<div class="input-modern">
    <div style="margin-bottom: 20px;">
        <b style="color: white; font-size: 1.2em;">üéì CONVERSE COM A IA INTELIGENTE:</b>
    </div>
""", unsafe_allow_html=True)

pergunta = st.text_input("", placeholder="Digite sua pergunta, d√∫vida ou comando...", label_visibility="collapsed")

# Bot√µes de a√ß√£o
col1, col2, col3, col4 = st.columns([2, 1, 1, 1])
with col1:
    if st.button("üöÄ ENVIAR MENSAGEM", use_container_width=True) and pergunta:
        st.session_state.digitando = True
        with st.spinner("üí≠ Flowzz est√° pensando..."):
            time.sleep(0.5)
            resposta = gerar_resposta_inteligente(pergunta)
            
            # Adicionar ao hist√≥rico
            st.session_state.historico.append({"tipo": "user", "conteudo": pergunta})
            
            # Simular digita√ß√£o
            placeholder = st.empty()
            texto_completo = ""
            for char in resposta:
                texto_completo += char
                placeholder.markdown(f'<div class="bot-message"><b>ü§ñ Flowzz:</b> {texto_completo}‚ñà</div>', unsafe_allow_html=True)
                time.sleep(0.02)
            
            st.session_state.historico.append({"tipo": "bot", "conteudo": resposta})
            st.session_state.digitando = False
            st.rerun()

with col2:
    if st.button("üßπ LIMPAR", use_container_width=True):
        st.session_state.historico = []
        st.rerun()

with col3:
    if st.button("üí° DICAS", use_container_width=True):
        dicas = [
            "Pergunte sobre: √°lgebra, literatura, f√≠sica, hist√≥ria",
            "Digite 'exerc√≠cio' para praticar",
            "Use 'exemplo' para ver aplica√ß√µes",
            "Experimente: 'me explique como' + tema"
        ]
        st.session_state.historico.append({"tipo": "bot", "conteudo": "üí° **Dicas de uso:**\n‚Ä¢ " + "\n‚Ä¢ ".join(dicas)})
        st.rerun()

with col4:
    if st.button("‚ö° MODO", use_container_width=True):
        st.session_state.modo_avancado = not st.session_state.modo_avancado
        st.rerun()

st.markdown('</div>', unsafe_allow_html=True)

# Sidebar futurista
with st.sidebar:
    st.markdown("""
    <div style="background: rgba(255,255,255,0.15); padding: 25px; border-radius: 25px; margin-bottom: 25px;">
        <h3 style="color: white;">üìä STATUS DA IA</h3>
        <p style="color: rgba(255,255,255,0.9);">ü§ñ Humor: {}</p>
        <p style="color: rgba(255,255,255,0.9);">‚ö° Energia: {:.1f}%</p>
        <p style="color: rgba(255,255,255,0.9);">üìà Intera√ß√µes: {}</p>
        <p style="color: rgba(255,255,255,0.9);">üíæ Mem√≥ria: {} conversas</p>
    </div>
    """.format(
        st.session_state.ia.humor.title(),
        st.session_state.ia.nivel_energia,
        st.session_state.ia.interacoes,
        len(st.session_state.ia.memoria.historico_conversas)
    ), unsafe_allow_html=True)
    
    # Mat√©rias em cards expans√≠veis
    st.markdown("""
    <div style="background: rgba(255,255,255,0.15); padding: 25px; border-radius: 25px; margin-bottom: 25px;">
        <h3 style="color: white;">üìö MAT√âRIAS DISPON√çVEIS</h3>
    </div>
    """, unsafe_allow_html=True)
    
    for materia in ["Matem√°tica", "Portugu√™s", "Ci√™ncias", "Hist√≥ria"]:
        with st.expander(f"üéØ {materia}", expanded=False):
            if materia == "Matem√°tica":
                st.write("‚Ä¢ √Ålgebra\n‚Ä¢ Geometria\n‚Ä¢ C√°lculo\n‚Ä¢ Trigonometria")
            elif materia == "Portugu√™s":
                st.write("‚Ä¢ Gram√°tica\n‚Ä¢ Literatura\n‚Ä¢ Reda√ß√£o\n‚Ä¢ Interpreta√ß√£o")
            elif materia == "Ci√™ncias":
                st.write("‚Ä¢ F√≠sica\n‚Ä¢ Qu√≠mica\n‚Ä¢ Biologia\n‚Ä¢ Astronomia")
            else:
                st.write("‚Ä¢ Brasil\n‚Ä¢ Mundial\n‚Ä¢ Antiga\n‚Ä¢ Contempor√¢nea")
    
    # Sistema de criadores
    st.markdown("""
    <div style="background: rgba(255,255,255,0.15); padding: 25px; border-radius: 25px; margin-bottom: 25px;">
        <h3 style="color: white;">üè¢ AMK TECNOLOGIA</h3>
        <p style="color: rgba(255,255,255,0.9);">üë®‚Äçüíª <b>Criadores:</b></p>
        <p style="color: rgba(255,255,255,0.9);">‚Ä¢ Kayky (CEO)</p>
        <p style="color: rgba(255,255,255,0.9);">‚Ä¢ Marcos Luan (CTO)</p>
        <p style="color: rgba(255,255,255,0.9);">üöÄ <b>Vers√£o:</b> Premium 4.0</p>
        <p style="color: rgba(255,255,255,0.9);">üìÖ <b>Lan√ßamento:</b> 2025</p>
    </div>
    """, unsafe_allow_html=True)

# Footer c√≥smico
st.markdown("""
<div style="text-align: center; margin-top: 50px; padding: 30px; background: rgba(255,255,255,0.1); border-radius: 30px; border: 2px solid rgba(255,255,255,0.2);">
    <p style="color: white; font-size: 1.3em; margin: 0;" class="glowing-text">
        <b>üöÄ Desenvolvido com üíô por Kayky & Marcos Luan</b>
    </p>
    <p style="color: rgba(255,255,255,0.9); margin: 10px 0;">
        AMK Tecnologia ¬© 2025 ‚Ä¢ Revolucionando a educa√ß√£o com IA de ponta
    </p>
    <p style="color: rgba(255,255,255,0.7); margin: 0;">
        ü§ñ Educa.Flowzz AI Premium ‚Ä¢ Humor: {} ‚Ä¢ Energia: {:.1f}% ‚Ä¢ Mem√≥ria: {} conversas
    </p>
</div>
""".format(
    st.session_state.ia.humor,
    st.session_state.ia.nivel_energia,
    len(st.session_state.ia.memoria.historico_conversas)
), unsafe_allow_html=True)

# Efeitos interativos
if st.session_state.digitando:
    st.markdown("""
    <div style="text-align: center; margin-top: 20px;">
        <div class="typing-progress"></div>
        <p style="color: rgba(255,255,255,0.7); margin: 10px 0;">Flowzz est√° digitando...</p>
    </div>
    """, unsafe_allow_html=True)



